name: CI Pipeline

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main']

env:
  NODE_ENV: production
  VITE_BASE_URL: '/' # 必须使用相对路径

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          # 清理缓存
          npm cache clean --force
          # 完整安装依赖
          npm ci --no-audit --no-fund --include=dev
          # 验证插件安装
          npm ls

      - name: Debug Dependencies
        run: npm ls

      - name: Run Linter
        run: |
          npx eslint . --fix --no-error-on-unmatched-pattern || echo "Linting step failed."

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Coverage
        run: npm run coverage

      - name: Build Project
        run: |  # 添加管道符号
          npm run build
          ls -al dist/  # 查看构建产物
          du -sh dist/  # 检查文件大小

      - name: Run E2E Tests
        run: npm run test:e2e

  deploy-prod:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install and Build
        run: |
          npm ci
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#36a64f'
          SLACK_TITLE: 'Deploy Success'
          SLACK_MESSAGE: 'Production deployment completed'
        if: success()

      - name: Cache Vite Build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json') }}

      - name: Clean Cache
        run: |
          npm cache clean --force
          rm -rf node_modules

      - name: Cache Test Reports
        uses: actions/cache@v3
        with:
          path: |
            coverage
            test-results.xml
          key: ${{ runner.os }}-test-${{ hashFiles('package-lock.json') }}
